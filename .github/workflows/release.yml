name: Build and Release

on:
  push:
    branches: [ main ]
    paths: [ 'package.json' ]
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check if version changed
        id: check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # If manually triggered, always build
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "Manual trigger - building version $CURRENT_VERSION"
          else
            # For push events, check for version changes
            PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version")
            
            echo "Current version: $CURRENT_VERSION"
            echo "Previous version: $PREVIOUS_VERSION"
            
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
              echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            else
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "No version change detected"
            fi
          fi

  build-and-release:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Vite app
        run: npm run build
      
      - name: Build Electron app
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          name: Minecraft Core v${{ needs.check-version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            dist/*.exe
            dist/latest.yml
          body: |
            ## What's Changed
            
            Auto-release for version ${{ needs.check-version.outputs.version }}
            
            ### Download
            - **Windows**: Download the `.exe` file below
            - **Auto-Updates**: Existing users will be notified of this update automatically
            
            ### Installation
            1. Download the `.exe` file
            2. Run the installer
            3. Follow the setup wizard
            
            ---
            *This release was automatically generated when the version was bumped to ${{ needs.check-version.outputs.version }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 